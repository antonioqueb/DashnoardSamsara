---
// Importa el layout por defecto
import DefaultLayout from '../layouts/DefaultLayout.astro'

// Declaración de script para cargar D3 desde CDN
const d3Script = 'https://cdn.jsdelivr.net/npm/d3@7';
---

  <script src={d3Script}></script>
  <DefaultLayout title="Logística y Transporte">
    <section style="color: white;">
      <h1>Vehículos Activos</h1>
      <div class="chart-container" id="chart1">
        <div class="chart-label">Número Total de Vehículos Activos</div>
        <div class="chart"></div>
      </div>
      <div class="chart-container" id="chart2">
        <div class="chart-label">Disponibilidad de Vehículos por Tipo</div>
        <div class="chart"></div>
      </div>
      <div class="chart-container" id="chart3">
        <div class="chart-label">Tiempo Medio de Actividad por Vehículo</div>
        <div class="chart"></div>
      </div>
      <div class="chart-container" id="chart4">
        <div class="chart-label">Vehículos Inactivos</div>
        <div class="chart"></div>
      </div>
      <div class="chart-container" id="chart5">
        <div class="chart-label">Mantenimiento de Vehículos</div>
        <div class="chart"></div>
      </div>
      <div class="chart-container" id="chart6">
        <div class="chart-label">Utilización de la Flota</div>
        <div class="chart"></div>
      </div>
    </section>
  </DefaultLayout>

  <script type="module">
    document.addEventListener("DOMContentLoaded", function() {
      const charts = ['chart1', 'chart2', 'chart3', 'chart4', 'chart5', 'chart6'];
      const data = [
        { type: 'bar', values: [20, 40, 20, 40, 60, 40, 66, 40, 60, 40, 60, 80, 100] },
        { type: 'line', values: [5, 4, 20, 40, 60, 40, 61, 40, 20, 40, 60, 40, 60, 80, 100] },
        { type: 'point', values: [1, 20, 40, 60, 40, 62, 40, 20, 40, 60, 40, 60, 80, 100, 4, 5] },
        { type: 'bar', values: [30, 20, 50, 70, 60, 90, 100, 50, 30, 70, 60, 90, 100] }, // Datos para el chart4
        { type: 'line', values: [85, 80, 88, 90, 85, 95, 100, 90, 85, 95, 80, 85, 90] }, // Datos para el chart5
        { type: 'point', values: [55, 60, 65, 50, 70, 75, 80, 85, 90, 95, 85, 90, 95] } // Datos para el chart6
      ];

      charts.forEach((id, idx) => {
        const chartData = data[idx];
        const svg = d3.select(`#${id} .chart`).append("svg")
          .attr("width", window.innerWidth / 3)
          .attr("height", 400)
          .style("background-color", "transparent");

        const x = d3.scaleLinear()
          .domain([0, chartData.values.length - 1])
          .range([40, window.innerWidth / 3 - 40]);

        const y = d3.scaleLinear()
          .domain([0, d3.max(chartData.values)])
          .range([360, 40]);

        // Eje X
        svg.append("g")
          .attr("transform", "translate(0,360)")
          .call(d3.axisBottom(x))
          .attr("color", "#aaa")
          .style("font-size", "12px");

        // Eje Y
        svg.append("g")
          .attr("transform", "translate(40,0)")
          .call(d3.axisLeft(y).ticks(10))
          .attr("color", "#aaa")
          .style("font-size", "12px");

        // Cuadrícula
        svg.append("g")
          .call(d3.axisLeft(y).ticks(10).tickSize(-window.innerWidth / 3 + 80).tickFormat(''))
          .attr("color", "rgba(255, 255, 255, 0.1)");

        // Añadir gráficos
        if (chartData.type === 'bar') {
          svg.selectAll("rect")
            .data(chartData.values)
            .enter().append("rect")
            .attr("x", (d, i) => x(i))
            .attr("y", d => y(d))
            .attr("width", 10)
            .attr("height", d => 360 - y(d))
            .attr("fill", "steelblue");
        } else if (chartData.type === 'line') {
          const line = d3.line()
            .x((d, i) => x(i))
            .y(d => y(d));

          svg.append("path")
            .datum(chartData.values)
            .attr("fill", "none")
            .attr("stroke", "steelblue")
            .attr("stroke-width", 2)
            .attr("d", line);
        } else if (chartData.type === 'point') {
          svg.selectAll("circle")
            .data(chartData.values)
            .enter().append("circle")
            .attr("cx", (d, i) => x(i))
            .attr("cy", d => y(d))
            .attr("r", 5)
            .attr("fill", "steelblue");
        }
      });
    });
  </script>

  <style lang="scss" is:global>
    .chart-container {
      float: left;
      width: 33%;
      margin: 2rem 0;
      text-align: center;
    }

    .chart-label {
      margin-bottom: 1rem;
      font-size: 16px;
      color: white;
    }

    .chart {
      width: 100%;
      height: 400px;
      background-color: transparent;
      border: 1px solid #555;
    }
  </style>
